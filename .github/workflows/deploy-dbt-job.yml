# .github/workflows/deploy-dbt-job.yml

name: 'Deploy & Run: dbt Transformation Job'

on:
  push:
    branches: [ 'main' ]
    paths:
      - 'dbt_project/**'
      - '.github/workflows/deploy-dbt-job.yml'
      - 'dbt_project/cloudbuild.yaml'
  
  workflow_dispatch:
    inputs:
      run_job_after_deploy:
        description: 'Execute job immediately after deployment?'
        required: true
        default: true
        type: boolean

# --- Variables de Configuración Centralizadas ---
env:
  PROJECT_ID: 'dwhfinancial'
  REGION: 'us-central1'
  REPOSITORY: 'cloud-run-source-deploy' # Repositorio en Artifact Registry
  JOB_NAME: 'dbt-transform-job'
  JOB_SERVICE_ACCOUNT: 'drive-reader-sa@dwhfinancial.iam.gserviceaccount.com'
  DEPLOYER_SERVICE_ACCOUNT: 'github-actions-deployer@dwhfinancial.iam.gserviceaccount.com'

jobs:
  # Job 1: Construye la imagen y despliega el Job usando Cloud Build
  build-and-deploy:
    name: 'Build and Deploy'
    runs-on: ubuntu-latest
    permissions:
      contents: 'read'
      id-token: 'write'
    
    steps:
      - name: 'Checkout repository code'
        uses: actions/checkout@v4

      - name: 'Authenticate to Google Cloud'
        uses: 'google-github-actions/auth@v2'
        with:
          workload_identity_provider: ${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ env.DEPLOYER_SERVICE_ACCOUNT }}

      - name: 'Set up gcloud CLI'
        uses: 'google-github-actions/setup-gcloud@v2'

      - name: 'Submit to Cloud Build'
        id: build
        run: |
          echo "🚀 Submitting build to Cloud Build..."
          gcloud builds submit ./dbt_project \
            --config=./dbt_project/cloudbuild.yaml \
            --project=${{ env.PROJECT_ID }} \
            --substitutions="_JOB_NAME=${{ env.JOB_NAME }},_REGION=${{ env.REGION }},_LOCATION=${{ env.REGION }},_REPOSITORY=${{ env.REPOSITORY }},_IMAGE_TAG=${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/dbt-transform-job:${{ github.sha }}"

  # Job 2: Ejecuta el Job recién desplegado
  execute-job:
    name: 'Execute dbt Job'
    runs-on: ubuntu-latest
    needs: build-and-deploy
    # Condición: Solo se ejecuta si el build fue exitoso y el input lo permite
    if: |
      always() && needs.build-and-deploy.result == 'success' &&
      (github.event.inputs.run_job_after_deploy == 'true' || github.event_name == 'push')
      
    permissions:
      id-token: 'write'
      contents: 'read'

    steps:
      - name: 'Authenticate to Google Cloud'
        uses: 'google-github-actions/auth@v2'
        with:
          workload_identity_provider: ${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ env.DEPLOYER_SERVICE_ACCOUNT }}

      - name: 'Set up gcloud CLI'
        uses: 'google-github-actions/setup-gcloud@v2'
        
      - name: 'Execute Cloud Run Job and Wait'
        id: execute
        run: |
          echo "⚡ Starting execution for job: ${{ env.JOB_NAME }}"
          EXECUTION_NAME=$(gcloud run jobs execute ${{ env.JOB_NAME }} \
            --project=${{ env.PROJECT_ID }} \
            --region=${{ env.REGION }} \
            --format="value(metadata.name)" \
            --wait) 

          echo "✅ Execution finished with name: $EXECUTION_NAME"
          
          # Verificar el estado final después de esperar
          FINAL_STATE=$(gcloud run jobs executions describe $EXECUTION_NAME \
            --project=${{ env.PROJECT_ID }} \
            --region=${{ env.REGION }} \
            --format="value(status.conditions[?(@.type=='Completed')].status)")

          if [ "$FINAL_STATE" != "True" ]; then
            echo "❌ Execution failed."
            
            echo "--- Fetching last 50 error logs ---"
            gcloud logging read "resource.type=\"cloud_run_job\" resource.labels.job_name=\"${{ env.JOB_NAME }}\" labels.\"run.googleapis.com/execution_name\"=\"$EXECUTION_NAME\" severity>=ERROR" \
              --project=${{ env.PROJECT_ID }} --limit=50 --format="table(timestamp,logName,textPayload)"
            
            exit 1
          else
            echo "🎉 Execution completed successfully."
          fi

  # Job 3: Limpia imágenes antiguas de Artifact Registry
  cleanup-images:
    name: 'Cleanup Old Images'
    runs-on: ubuntu-latest
    needs: build-and-deploy
    # Solo se ejecuta si el despliegue fue exitoso en la rama main
    if: always() && needs.build-and-deploy.result == 'success' && github.ref == 'refs/heads/main'

    permissions:
      id-token: 'write'
      contents: 'read'

    steps:
      - name: 'Authenticate to Google Cloud'
        uses: 'google-github-actions/auth@v2'
        with:
          workload_identity_provider: ${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ env.DEPLOYER_SERVICE_ACCOUNT }}

      - name: 'Set up gcloud CLI'
        uses: 'google-github-actions/setup-gcloud@v2'

      - name: 'Delete all but the 10 newest images'
        run: |
          echo "🧹 Cleaning up old container images..."
          gcloud artifacts docker images list-tags ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/dbt-transform-job \
            --limit=9999 --sort-by=~TIMESTAMP \
            --filter='-tags:latest' \
            --format='get(digest)' | tail -n +11 | \
            xargs -I {} gcloud artifacts docker images delete ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/dbt-transform-job@{} --quiet